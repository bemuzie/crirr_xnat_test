#* @vtlvariable name="displayManager" type="org.nrg.xdat.display.DisplayManager" *#
#* @vtlvariable name="siteConfig" type="java.util.Properties" *#
#* @vtlvariable name="content" type="org.apache.turbine.services.pull.tools.ContentTool" *#
#* @vtlvariable name="turbineUtils" type="org.nrg.xdat.turbine.utils.TurbineUtils" *#
#* @vtlvariable name="project" type="org.nrg.xdat.om.XnatProjectdata" *#
##<link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="$content.getURI("scripts/jquery-ui/jquery-ui-xnat.css")">
<link rel="stylesheet" href="$content.getURI("scripts/chosen/chosen.min.css")">
<style type="text/css">
    
    .ui-accordion {
        font-family: Arial, Helvetica, sans-serif; 
        font-size: 13px;
        line-height: 17px;
    }

    .ui-accordion .ui-accordion-header {
        font-size: 13px; 
        font-weight: bold;
        color: #222;
    }
    
    .ui-accordion .ui-accordion-header-active {
        background: #084FAB; 
        color: #fff; 
    }
    
    .ui-accordion .ui-accordion-content { padding: 1em; }
    
    .ui-accordion .ui-widget-content a { color: #084FAB }
    .ui-accordion .ui-widget-content a:hover { text-decoration: underline; }
    
    .ui-state-active .ui-icon {
        background-image: url('$content.getURI("scripts/jquery-ui/images/ui-icons_ffffff_256x240.png")');
    }

</style>
<script type="text/javascript" src="$content.getURI("scripts/jquery-ui/jquery-ui.min.js")"></script>
<script type="text/javascript" src="$content.getURI("scripts/seriesImportFilter.js")"></script>
<script type="text/javascript" src="$content.getURI("scripts/settingsManager.js")"></script>
<script type="text/javascript" src="$content.getURI("scripts/xnat/app/eventsManager.js")"></script>
<script src="/scripts/ace/ace.js" type="text/javascript" charset="utf-8"></script>

<div id="addEventHandler" class="html-template">
    <table>
        <tr>
            <td><label for="event" class="required"><strong>Event:</strong><i>*</i></label></td>
            <td><select id="select_event" name="event" class="event"></select></td>
        </tr>
        <tr>
            <td><label for="scriptId" class="required"><strong>Script ID:</strong><i>*</i></label></td>
            <td><select id="select_scriptId" name="scriptId" class="scriptId"></select></td>
        </tr>
        <tr>
            <td><label for="description"><strong>Description:</strong></label></td>
            <td><input id="description" name="description" class="description" type="text" size="40"></td>
        </tr>
    </table>
</div>

<div id="accordion">
#if($turbineUtils.toBoolean($siteConfig.getProperty("UI.allow-quarantine","true")))
 <h3>Define Quarantine Settings</h3>
 <div>
 <table id="quarantine_table">
  <tr>
   <td colspan="2" class="highlighted" id="quarantine_container">
#set($quar=$project.getArcSpecification().getQuarantineCode())
## #if($quar=="")
#if(!$quar)
#set($quar=0)
#end
	 <!-- DIV style="font-weight:700;">&nbsp;Define Quarantine Settings</DIV -->
       <TABLE cellpadding="5" cellspacing="0">
            <TR><TD NOWRAP><input id="yes_quarantine" type="radio" name="quarantine" value="1" #if($!quar==1)CHECKED#end/> YES</TD><TD>All new experiments (and modified experiments) are placed into a quarantine state and must be specifically activated.</TD></TR>
            <TR><TD NOWRAP><input id="no_quarantine"  type="radio" name="quarantine" value="0" #if($!quar==0)CHECKED#end /> NO</TD><TD>New and modified experiments will not be placed in Quarantine.</TD></TR>
            <TR><TD COLSPAN="2"><input type="button" id="project_quarantine_save" value="Save" disabled></TD></TR>
       </TABLE>
  </td>
 </tr>
</table>
<script>
window.quarantine=(new RadioSettingsManager(document.getElementById('quarantine_container'),{'URI':serverRoot+'/REST/projects/$project.getId()/quarantine_code/','radio_ids':['yes_quarantine','no_quarantine'],'current_value':'$quar','button':'project_quarantine_save'}));
</script>
</div>
#end
#if($turbineUtils.toBoolean($siteConfig.getProperty("project.allow-auto-archive","true")))
<h3>Define Prearchive Settings</h3>
<div>
<table id="prearchive_table">
 <tr>
  <td colspan="2" class="highlighted" id="prearchive_container">
#set($prearc=$project.getArcSpecification().getPrearchiveCode())
## #if($prearc=="")
#if(!$prearc)
#set($prearc=0)
#end
##	<DIV style="font-weight:700;">&nbsp;Define Prearchive Settings</DIV>
       <TABLE cellpadding="5" cellspacing="0">
            <TR><TD NOWRAP><input id="0_prearchive" type="radio" name="prearchive" value="0" #if($prearc==0)CHECKED#end/></TD><TD>All image data should be placed in a temporary location (prearchive) before being manually transferred into the permanent archive.</TD></TR>
            <TR><TD NOWRAP><input id="4_prearchive"  type="radio" name="prearchive" value="4" #if($prearc==4)CHECKED#end /></TD><TD>All image data will be placed into the archive automatically, but anything matching existing files will be rejected.  Data which doesn't match a pre-existing $displayManager.getSingularDisplayNameForProject().toLowerCase() will be placed in an 'Unassigned' $displayManager.getSingularDisplayNameForProject().toLowerCase().</TD></TR>
            <TR><TD NOWRAP><input id="5_prearchive"  type="radio" name="prearchive" value="5" #if($prearc==5)CHECKED#end /></TD><TD>All image data will be placed into the archive automatically and will overwrite existing files.  Data which doesn't match a pre-existing $displayManager.getSingularDisplayNameForProject().toLowerCase() will be placed in an 'Unassigned' $displayManager.getSingularDisplayNameForProject().toLowerCase().</TD></TR>
            <TR><TD COLSPAN="2"><input type="button" id="project_prearchive_save" value="Save" disabled="disabled"/></TD></TR>
       </TABLE>
  </td>
 </tr>
</table>
<script>
window.prearchive=(new RadioSettingsManager(document.getElementById('prearchive_container'),{'URI':serverRoot+'/REST/projects/$project.getId()/prearchive_code/','radio_ids':['0_prearchive','4_prearchive','5_prearchive'],'current_value':'$prearc','button':'project_prearchive_save'}));
</script>
</div>
#end
<h3>Anonymization Script</h3>
<div>
<table id="script_table">
  <tr>
    <td class="highlighted" id="script_container">
##      <DIV style="font-weight:700;">Anonymization Script</DIV>
      <TABLE>
	<TR>
    <TD><label for="enable_anon_script">Enable Script</label><input id="enable_anon_script" type="checkbox" name="enable_anon_script" value="true"/></TD>
  </TR>
	<TR><TD><textarea id="script_text_area" rows="20" cols="80" disabled="disabled"></textarea></TD></TR>
	<TR><TD><input type="button" id="anon_script_save" value="Save" disabled="disabled"/></TD></TR>
      </TABLE>      
    </td>
  </tr>
</table>
<script>
  var sg = new scriptGet(document.getElementById('script_container'),
            { 
	       'getStatus' : serverRoot + '/data/config/edit/projects/$project.getId()/image/dicom/status?format=json',
	       'putStatus' : serverRoot + '/data/config/edit/projects/$project.getId()/image/dicom/status?activate=',
	       'getScript' : serverRoot + '/data/config/edit/projects/$project.getId()/image/dicom/script?format=json',
	       'putScript' : serverRoot + '/data/config/edit/projects/$project.getId()/image/dicom/script?inbody=true',
	       'project' : '$project.getId()',
	       'enable_checkbox' : 'enable_anon_script',
	       'script_text_area' : 'script_text_area',
	       'save_button' : 'anon_script_save'
	    });
  sg.get();

  var enableAnonScript = jq('#enable_anon_script');
  var anonScript = jq('#script_text_area');
  function toggleControlsOnAnonEnabled() {
    var enabled = enableAnonScript.is(':checked');
    anonScript.prop('disabled', !enabled);
  }

  function dirty() {
    // Add check for class manager, since setting the initial value of the radio button
    // will cause the dirty() function to be called, at which point the manager is null.
    if (window.anonymizationManager && !window.anonymizationManager.wasDirty()) {
      window.anonymizationManager.dirtyForm();
    }
    toggleControlsOnAnonEnabled();
  }

  anonScript.bind('input propertychange', dirty);
  enableAnonScript.change(dirty);

  function configurationAnonymizationTabChange(obj) {
    if(obj.newValue.get("href")=="#anonymization") {
      if(window.anonymizationManager==undefined) {
        window.anonymizationManager = new SettingsTabManager('anonymization_mgmt_div', 'anonymization');
      }
      toggleControlsOnAnonEnabled();
    }
  }

  function addAnonymizationMgmtMonitor(){
    if(window.configurationTabView.get("activeTab").get("href")=="#anonymization") {
      if(window.anonymizationManager==undefined) {
        window.anonymizationManager = new SettingsTabManager('anonymization_mgmt_div', 'anonymization');
      }
    } else {
      window.configurationTabView.subscribe("activeTabChange", configurationAnonymizationTabChange);
    }
  }

  YAHOO.util.Event.onDOMReady(addAnonymizationMgmtMonitor);
//  putConfigurationControls('anonymization', ['anonScript', 'enableAnonScript']);
</script>
</div>
<h3>Series Import Filters</h3>
<div>
<table id="series_import_filter_table">
    <tr>
        <td colspan="2" class="highlighted" id="series_import_filter_container">
            ## WHY IS THIS IN A TABLE? C'MON MAN, IT'S 2015
            <table cellspacing="8">
                <tr>
                    <td>
                        This is the series import filter applied to incoming and archiving DICOM resources for your
                        project. This filter can also be supplemented by the site-wide series import filter.
                    </td>
                </tr>
                <tr>
                    <td><label for="enable_series_import_filter">Enable Filter</label><input type="checkbox" name="enable_series_import_filter" id="enable_series_import_filter" /></td>
                </tr>
                <tr>
                    <td><label for="series_import_filter_mode_list">Mode</label>
                        <select name="series_import_filter_mode_list" id="series_import_filter_mode_list" disabled placeholder="Enter white- or blacklisted series import filters separated by newlines, e.g. <b>localizer</b> for localizer series. Enter a modality-mapped series import filter as JSON.">
                            <option value="whitelist">Whitelist</option>
                            <option value="blacklist">Blacklist</option>
                            <option value="modalityMap">Modality Map</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="info">
                            Creating a whitelist means that <i>only</i> DICOM series with a series description that matches one of
                            series filter patterns will be considered by XNAT import tools such as the upload applet. Creating a
                            blacklist means that all DICOM series will be considered <i>except</i> for series that have one of the
                            specified series filter patterns. A modality map lets you specify boolean expressions in JavaScript that
                            can use DICOM header values from incoming DICOM objects to decide the appropriate modality for the
                            destination session.
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><textarea id="series_import_filter_text_area" rows="20" cols="80" disabled="disabled"></textarea></td>
                </tr>
                <tr>
                    <td>
                        <div class="info">
                            The series filters can be written as exact string matches, but also can be regular expressions. The regular expressions are evaluated using the
                            <a href="http://docs.oracle.com/javase/tutorial/essential/regex/" target="_blank">Java regular expression syntax</a>. These expressions are
                            case-insensitive, i.e. the string "SAG LOCALIZER" will also match "Sag Localizer".
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><input type="button" id="series_import_filter_save" value="Save" disabled="disabled"/></td>
                </tr>
            </table>
        </td>
    </tr>
</table>
<script>
    var filtersGet = new seriesImportFiltersGet(
            {
                'container': document.getElementById('series_import_filter_container'),
                'project': '$project.getId()',
                'enable_checkbox': 'enable_series_import_filter',
                'mode_list': 'series_import_filter_mode_list',
                'filters_text_area': 'series_import_filter_text_area',
                'save_button': 'series_import_filter_save'
            });
    filtersGet.get();
</script>
</div>
#if($turbineUtils.toBoolean($siteConfig.getProperty("enableProjectAppletScript", "false")))
<h3>Applet Configuration Script</h3>
<div>
  <table id="applet_script_table">
  <tr>
    <td colspan="2" class="highlighted" id="applet_script_container">
##      <DIV>Applet Configuration Script</DIV>
      <TABLE>
          <tr>
              <td><label for="enable_applet_script">Enable Applet Script</label></td>
              <td><input type="checkbox" name="enable_applet_script" id="enable_applet_script" /></td>
          </tr>
	<TR><TD></TD><TD><textarea id="applet_script_text_area" rows="20" cols="80"></textarea></TD></TR>
	<TR><TD COLSPAN="2"><input type="button" id="applet_script_save" value="Save" disabled="disabled"/></TD></TR>
      </TABLE>      
    </td>
  </tr>
</table>
<script>
  var sgApplet = new scriptGet(document.getElementById('applet_script_container'),
            { 
	       'getStatus' : serverRoot + '/data/projects/$project.getId()/config/applet/settings?format=json',
	       'putStatus' : serverRoot + '/data/projects/$project.getId()/config/applet/settings?status=',
	       'getScript' : serverRoot + '/data/projects/$project.getId()/config/applet/settings?format=json',
	       'putScript' : serverRoot + '/data/projects/$project.getId()/config/applet/settings?inbody=true',
	       'project' : '$project.getId()',
	       'enable_checkbox' : 'enable_applet_script',
	       'script_text_area' : 'applet_script_text_area',
	       'save_button' : 'applet_script_save'
	    });
  sgApplet.get();
</script>
</div>
#end

    <h3>Event Handlers</h3>
    <div id="events_list" style="min-height:120px;">
        <p id="no_events_defined" style="display:none;padding:20px;">There are no events currently defined for this site.</p>
        <p id="no_event_handlers" style="display:none;padding:20px;">There are no event handlers currently configured for this project.</p>
        <table id="events_table" class="xnat-table" style="display:none;width:100%;">
            <thead>
            <th>Event</th>
            <th>Script ID</th>
            <th>Description</th>
            <th></th>
            </thead>
            <tbody>
            ## content populated with XNAT.app.eventsManager.initEventsTable()
            </tbody>
        </table>
        <br>
        <button type="button" id="add_event_handler" class="btn1" style="font-size:12px;">Add Event Handler</button>
        <div class="alert" style="margin:15px 0;max-width:696px;min-width:400px;">
            Automation is an emerging feature in the XNAT server platform. It allows you to create scripts in a number
            of scripting languages that can be triggered by system events. You should use it only if you or your team
            has a thorough understanding of XNAT, your system architecture and environment, and the particular
            scripting languages involved. Refer to the
            <a href="https://wiki.xnat.org/display/XNAT16/XNAT+Automation" target="_blank">XNAT Automation documentation</a>
            for more information. For specific questions, you can visit the
        ##    <a href="https://wiki.xnat.org/display/XNAT16/XNAT+Automation+Discussion" target="_blank">XNAT Automation Discussion forum</a> or the
            <a href="https://groups.google.com/forum/#!forum/xnat_discussion" target="_blank">XNAT discussion group</a>.
        </div>
    </div>

    #addCustomScreens($project.getXSIType() "report/manage_tab")
</div><!-- /#accordion -->

<script type="text/javascript">
    jq('#accordion').accordion({heightStyle:'content'});
</script>
