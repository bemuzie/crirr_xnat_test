#goals cache
#Wed Oct 07 13:46:28 UTC 2015
ear\:ear=Build an ear file>ear\:init
turbine\:clean-clean=null>
announcement\:generate=Generate release announcement>announcement\:check-version
license\:transfer=Generate a xml file from your license file>xdoc\:init
repository\:audit-create-licenses=create the license directories, for all groups in the audit file, in the repository>
pom\:contentvalidate=Validate the content of the Maven POM>
scm\:cvs-tag-project=null>
nsis=Generate NSIS Installer .exe>nsis\:installer
idea\:idea=Generate IDEA .ipr, .iml and .iws project files>
multiproject\:deploy-callback=null>
uberjar\:install-snapshot=Install the snapshot version of the uberjar in the local repository>uberjar\:uberjar
jcoverage\:on=perform the coverage analysis>java\:compile
jbuilder\:generate-library=Generate JBuilder [id_project].library file>
plugin\:generate-navigation=Generate navigation.xml for the plugin>
console\:listGoals=List all available goals>
ejb\:init=Initialize filesystem and other resources for an ejb build>
webserver\:init=Initialize resources needed for the plugin>
ejb=Build an ejb file>ejb\:ejb
pom=Validate the Maven XML project descriptor>pom\:validate
jellydoc\:xml-doclet=Creates an XML representation of the doclet information>jellydoc\:init
dist\:deploy=Deploy a distribution>dist\:deploy-bin,dist\:deploy-src
turbine\:torque-copy-om=null>turbine\:torque-copy-security-om,turbine\:torque-copy-app-om,turbine\:torque-copy-id-table-om,turbine\:torque-copy-data-dtd
clover\:xml-report=Generate XML test coverage reports with Clover>clover\:test,clover\:xml-report-internal
ant\:generate-build=Generate an Ant build file>
jboss\:undeploy-exploded-warfile=Undeploy the result of the 'war\:webapp' goal. Note that 'maven.war.webapp.dir' *must* end with '.war' for this to work correctly.>
turbine\:sql=Build the SQL files necessary for the application>turbine\:check-runtime-environment
maven-checkstyle-plugin\:deregister=null>
war\:clean=Remove all artifacts created by war plugin>war\:init
war\:webapp=Build a webapp directory>war\:war-resources,test\:test
cruisecontrol=null>cruisecontrol\:configure
convert-snapshots-auto=null>
maven-clover-plugin\:report=null>
ejb\:ejb-client=Build a client ejb file>ejb\:ejb
maven-simian-plugin\:analyze=null>
maven-developer-activity-plugin\:deregister=null>
maven-clover-plugin\:register=null>
aspectwerkz\:aspectc=null>aspectwerkz\:compile
aspectwerkz\:attributec=Compile AspectWerkz javadoc attributes (xml-defined aspects)>aspectwerkz\:init
release\:deploy-distribution-src=null>release\:build-distribution-src
aspectwerkz\:weave=Weave aspects (offline mode)>aspectwerkz\:attributec,aspectwerkz\:aspectc
maven-javadoc-plugin\:register=null>xdoc\:init
test\:match-test=[deprecated] please use the test\:match goal instead>
announcement\:generate-all=Generate release announcement for all releases>announcement\:init
maven-faq-plugin\:deregister=null>faq\:init
idea\:multiproject=null>idea\:init
j2ee\:validate-war=Check that a war file is valid>
maven-jira-plugin\:deregister=null>
plugin=Build a plugin jar>plugin\:plugin
torque\:om-zip=Moves source om files to separate jar and out of the source tree>torque\:check-om-zip
rar=Build a rar file>rar\:rar
jetty\:run=Run Jetty>jetty\:config
maven-multichanges-plugin\:register=null>
torque\:datadump=dump data from database into xml file>torque\:init
release\:build-distribution-bin=null>release\:setup-distribution-bin
jboss\:init=null>
abbot\:prepare-resources=null>abbot\:prepare-filesystem
test=Test the application>test\:test
jbuilder=Generate JBuilder project files>jbuilder\:generate-library,jbuilder\:generate-project
multiproject\:dependency-convergence-report=Generate report which shows how consistent are the versions of artitfacts between projects>multiproject\:projects-init
eclipse=Generate Eclipse project files>eclipse\:generate-project,eclipse\:generate-classpath
xdoc\:jelly-init=Set up jelly xdoc requirements>
jcoverage\:merge=Merge two or more instrumentation files into one>
plugin\:repository-deploy-snapshot=null>plugin\:plugin
jar=Create the deliverable jar file.>jar\:jar
clover\:init=null>
faq=Generates FAQ xdoc files from FAQ XML documents>
ashkelon\:generate-xml=null>
pmd=Static Code Analyzer>
multiproject=Run the site goal of all subprojects and generate overview page>multiproject\:site
abbot\:test-webstart=Launch tests on a webstart application>abbot\:check-webstart-env,abbot\:prepare-filesystem
uberjar\:deploy-snapshot=Deploys the snapshot version of  the uberjar to remote repository>uberjar\:uberjar
maven-changelog-plugin\:register=null>
jar\:install-snapshot=Install a snapshot jar in the local repository>jar\:jar
javadoc\:install=Install the jar containing javadoc in the local repository>javadoc\:jar
turbine\:java-compile=null>turbine\:check-runtime-environment
torque\:ojb=Generates the repository and om for ojb (experimental)>
scm\:cvs-update-project=null>
jboss\:deploy-ear=Deploy ${maven.final.name}.ear>
test\:single=Execute a single test defined using the 'testcase' variable>test\:compile
jar\:deploy=Deploy a jar to the remote repository>jar\:jar
pom\:validate=Validate the Maven XML project descriptor>pom\:verify-version
turbine\:torque-copy-app-om=null>
jbuilder\:generate-project=Generate JBuilder [id_project].jpx file>
docbook\:transform=Transform any docbook-simple source into xdocs for later use>xdoc\:init
maven-license-plugin\:report=Generate an XML file from the license.txt>
maven-jdepend-plugin\:report=Generate a dependency report with JDepend>
idea\:workspace=Generate IDEA .iws project files>idea\:init
jboss\:dist=Generate zipped JBoss configuration>jboss\:package
repository\:copy-snapshot-jar=copy a snapshot jar, specified by groupId and artifact, to the repository>
maven-junit-report-plugin\:deregister=null>
latka=Run the project's latka tests>
maven-linkcheck-plugin\:register=null>
jboss\:deploy-exploded-warfile=Invoke the 'war\:webapp' goal and deploy the result. Note that 'maven.war.webapp.dir' *must* end with '.war' for this to work correctly.>war\:webapp
aspectwerkz\:init=null>
xdoc=Generate html project documentation xdoc sources>xdoc\:generate-from-pom,xdoc\:transform
release\:init=null>
aspectj=Weave with AspectJ>aspectj\:test-compile
turbine\:torque-security-datadtd=null>torque\:init
hibernate\:aggregate-mappings=Aggregate multiple .hbm.xml files into one file>hibernate\:init
dist\:deploy-snapshot=Deploy a snapshot distribution>dist\:deploy-bin-snapshot,dist\:deploy-src-snapshot
idea=Generate IDEA project files>idea\:idea
native\:install=Install the lib in the local repository>native\:compile
scm\:update-project=Update a project from SCM>scm\:validate
dist\:deploy-src=Deploy a source distribution>dist\:build-src
ear\:init=Initialise filesystem and other resources for an ear>
maven-javadoc-plugin\:deregister=null>
site\:ear=Create an EAR File from the generated site>site\:war
plugin\:repository-install=null>plugin\:plugin
javadoc=null>maven-javadoc-plugin\:report
cruisecontrol\:configure=Update a Cruise Control configuration file with this project>cruisecontrol\:validate
war\:deploy=Deploys the war to the remote repository>war\:war
ear\:install=Install the ear in the local repository>ear\:ear
release=null>
ear\:install-snapshot=Install the snapshot version of the ear in the local repository>ear\:ear
jboss\:deploy-warfile=Invoke the 'war' goal and deploy the result>war\:war
gump=Generate Gump descriptor from Maven descriptor>gump\:generate-descriptor
jellydoc\:doclet=A doclet which outputs all the Jelly tag related metadata as XML>jellydoc\:init
turbine\:init=null>
tjdo\:drop-tables=Drops the tables managed by Triactive JDO.>tjdo\:init
appserver\:stop=Stop a appserver instance>appserver\:init
cruisecontrol\:run=Run Cruise Control>cruisecontrol\:validate
jboss\:install=Install the zip into the local repository>jboss\:dist
torque\:datadtd=Generates the DATA DTD for your project>torque\:init
dist\:build-src=Build the source distribution.>dist\:build-setup,dist\:prepare-src-filesystem
java\:prepare-filesystem=Create the directory structure needed to compile>
eclipse\:generate-project=Generate Eclipse .project file>
war\:install=Install the war in the local repository>war\:war
pdf\:pdf=Generates a PDF document containing all project documentation. The PDF is generated from the .fo file generated in the fo\:fo goal.>pdf\:prepare
maven-tasklist-plugin\:deregister=null>
war\:war=Build a war file>war\:webapp
announcement\:mail=Send an email containing the release announcement>announcement\:generate
release\:setup-distribution-bin=null>release\:init
maven-linkcheck-plugin\:deregister=null>
jboss\:undeploy-ear=Undeploy ${maven.final.name}.ear>
maven-file-activity-plugin\:register=null>
maven-file-activity-plugin\:deregister=null>
turbine\:torque-copy-id-table-om=null>
site\:run-reports=null>xdoc\:register-reports
java\:compile=Compile the project>java\:prepare-filesystem
scm\:cvs-create-patch=null>
scm\:cvs-checkout-project=null>
turbine\:install-libs=updates the libraries for an inplace application>turbine\:check-runtime-environment
maven-javadoc-plugin\:report=Generate API documentation>xdoc\:init
idea\:init=null>
clover\:report=Generates the Clover reports>clover\:init
clover\:swing-report-internal=null>
multiproject\:projects-init=null>
repository\:audit-generate-poms=generate a pom for all the groupId's in the audit file>
maven-dashboard-plugin\:deregister=null>
maven-jxr-plugin\:deregister=null>
html2xdoc\:transform=Performs the html to xdoc transformation>
torque\:sql2xml=creates an xml schema from an sql schema>torque\:init
torque\:om-zip-worker=null>
maven-jellydoc-plugin\:report=Generates the tag documentation>jellydoc
rar\:init=Initialise filesystem and other resources for a rar>
jar\:jar=Create the deliverable jar file.>test\:test
java\:jar=Create the deliverable jar file.>jar\:jar
ear\:deploy=Deploys the ear to the remote repository>ear\:ear
maven-torque-plugin\:deregister=null>
ejb\:install-snapshot=Install the snapshot version of the ejb in the local repository>ejb\:ejb
maven-changes-plugin\:deregister=null>
maven-jcoverage-plugin\:report=Run the default report (html).>
webserver\:clean=Safely delete an installed webserver instance>webserver\:init
announcement\:init=null>
shell\:zsh=Generate Zsh files>
repository\:audit-create-directory=create the directory, specified by directoryName, for all groups in the audit file>
native\:compile=Compile the native compiler>native\:jniheader
clover=Generate test coverage reports with Clover>clover\:test,clover\:report
maven-clover-plugin\:deregister=null>
jdee=Generate JDEE project file>jdee\:generate-project
repository\:audit-copy-license=copy the license for the specified groupId to the repository>
maven-linkcheck-plugin\:clearcache=Removes the cache file>
jalopy\:taskdef=Define the jalopy task to Ant and Jelly>
plugin\:download=download and install a plugin from a remote repo>plugin\:download-artifact
release\:update-pom=null>
maven-faq-plugin\:register=null>faq\:init
maven-cruisecontrol-plugin\:register=null>
pdf\:init=null>xdoc\:init
maven-pmd-plugin\:register=null>
torque\:om-generate=null>torque\:init
ear=Build an ear file>ear\:ear
war\:install-snapshot=Install the snapshot version of the war in the local repository>war\:war
dashboard=Generate a dashboard report>dashboard\:report
jnlp\:generate-keystore=Generate a keystore file>jnlp\:init
plugin\:install-now=Build a plugin and load it into the currently running instance of Maven.>plugin\:plugin
rar\:deploy=Deploys the rar to the remote repository>rar\:rar
turbine\:webapp=null>turbine\:war
jboss=Creates a specific JBoss server configuration>jboss\:configure
junit-report\:report=Generate a report from the test results>
war\:load=null>
turbine\:check-runtime-environment=null>turbine\:init
torque\:om=Generate the Peer-based object model from *-schema.xml files>torque\:init,torque\:om-check
xdoc\:init=Generates the directory structure required for xdocs>
dashboard\:report-single=null>
test\:ui=Starts the Swing TestRunner front end>test\:compile
turbine\:setup=Setup a new Turbine web application>turbine\:init
maven-file-activity-plugin\:report=Generate developer and file activity reports>
cruisecontrol\:validate=null>scm\:validate
maven-tasklist-plugin\:register=null>
dist\:build=Build a complete distribution.>dist\:build-bin,dist\:build-src
javadoc\:install-snapshot=Install the snapshot version of the jar containing javadoc in the local repository>javadoc\:jar
maven-linkcheck-plugin\:report-real=Generate link check results and then transform to HTML>
repository\:audit-copy-licenses=copy all licenses in the audit file to the repository>
increment-snapshot-version=null>
dist\:prepare-bin-filesystem=Builds the binary distribution file system.>xdoc\:init,jar\:jar,site\:generate
plugin\:repository-install-snapshot=null>plugin\:plugin
appserver\:init=Initialize resources needed for the plugin>
maven-multichanges-plugin\:deregister=null>
dist\:deploy-src-snapshot=Deploy a source distribution>dist\:build-src
jboss\:configure=Creates a specific JBoss server configuration>jboss\:init
xdoc\:validate=Validate xdocs match the schema>pom\:taglib
multiproject\:install=Run 'artifact'\:install for all subprojects>
abbot\:prepare-filesystem=null>
maven-simian-plugin=Generate Simian (Code Similarity Analyzer) report.>maven-simian-plugin\:report
torque\:jdbc=jdbc to xml>torque\:init
html2xdoc=Generates XDoc documentation from normal HTML files>xdoc\:init
multiproject\:install-callback=null>
maven-multiproject-plugin\:register=null>
turbine\:torque-om-check=null>
eclipse\:external-tools=Generate an Eclipse external tool for each goal>
torque\:init=Build classpath and define tasks>
eclipse\:clean=Clean eclipse generated files>
turbine\:torque-datadtd=null>turbine\:copy-om
maven-dashboard-plugin\:register=null>
appserver\:clean=Safely delete an installed appserver instance>appserver\:init
maven-junit-report-plugin\:register=null>
gump\:generate-descriptor=Generate Gump descriptor from Maven descriptor>
tjdo=Enhance classes for use with Triactive JDO>tjdo\:enhance
release\:build-distribution-src=null>release\:init,scm\:checkout-project
abbot=Run the abbot tests>abbot\:test
jdeveloper=Generate JDeveloper project files>jdeveloper\:generate-project
scm\:checkout-project=Checkout a project>scm\:validate
maven-ashkelon-plugin\:deregister=null>
dist\:build-setup=Set up directories for a distribution build>
pom\:install=Install POM in the local repository.>
rar\:install-snapshot=Install the snapshot version of the rar in the local repository>rar\:rar
webserver\:cycle=Forced install and start of a webserver instance>webserver\:init
turbine\:torque-copy-data-dtd=null>
maven-jira-plugin\:register=null>
changes\:report=Generate a changes report>
ejb\:ejb=Build an ejb file>ejb\:init
multiproject\:create-nav=null>multiproject\:site-init
uberjar\:init=null>
checkstyle\:init=null>
multiproject\:site=Run the site goal of all subprojects and generate overview page>multiproject\:site-init
ejb\:deploy-snapshot=Deploys the snapshot version of the ejb to remote repository>ejb\:ejb
test\:single-test=[deprecated] please use the test\:single goal instead>
turbine\:torque-insert-sql=null>turbine\:sql
pdf=This is the default goal of the plugin and simply pre-requisites the pdf\:pdf goal. >fo\:fo,pdf\:prepare,pdf\:pdf
maven-cruisecontrol-plugin\:report=null>
junitdoclet=Generate unit tests>
test\:test-resources=Copy any resources that must be present for run tests>test\:prepare-filesystem
scm\:prepare-release=Prepare for a release in SCM>scm\:validate
convert-snapshots=null>
turbine\:torque-security-datasql=null>torque\:init
changelog\:create-cvspass=null>
maven-jcoverage-plugin\:deregister=Deregister the jcoverage plugin>
torque\:sql-check=Determine if the SQL files need to be generated>
hibernate\:init=null>
webserver\:restart=Restart a webserver instance>webserver\:init
maven-ashkelon-plugin\:report=null>
turbine\:war-webapp=null>
pom\:install-snapshot=Install the snapshot version of the POM in the local repository>
jboss\:start=Starts JBoss with our specific server configuration>jboss\:init
latka\:jmeter-convert=Convert a jmeter jmx file to a latka suite>
jnlp=Generate JNLP file and sign all jars>jnlp\:generate-jnlp
wizard\:ui=Run the Maven Swing Wizard>
maven-changes-plugin\:register=null>
uberjar\:install=Install the uberjar in the local repository>uberjar\:uberjar
jdeveloper\:generate-project=Generate jdeveloper .jpr>jdeveloper\:scanSources
jar\:snapshot=Create a snapshot jar, ie 'id-YYYYMMDD.hhmmss.jar'>
maven-jellydoc-plugin\:deregister=null>
abbot\:editor-webstart=Launch Abbot costello editor on a webstart application>abbot\:check-webstart-env,abbot\:prepare-filesystem
repository\:audit-generate-pom=generate a pom for the groupId provided, based on the audit file>
announcement\:check-version=null>announcement\:init
shell=Generate Zsh files>shell\:zsh
dashboard\:report=Generate a dashboard report>
tasklist=null>maven-tasklist-plugin\:report
plugin\:generate-docs=Generate navigation, goals and properties docs>
pom\:deploy=Deploy POM to the central repository.>
dist=Build a complete distribution.>dist\:build
abbot\:check-env=null>
multiproject\:deploy=Run 'artifact'\:deploy for all subprojects>
jboss\:undeploy-warfile=Undeploy the result of the 'war' goal>war\:init
jetty=Run Jetty>jetty\:run
torque\:create-db=generates the target database>torque\:init
xdoc\:generate-from-pom=Generates xdocs for site based on project descriptor>xdoc\:init,xdoc\:register-reports
maven-faq-plugin\:report=Generate FAQs>
maven-jdiff-plugin\:report=Generate an api difference report between versions>jdiff
turbine\:deploy=Deploys the Application into a local web container for testing>turbine\:check-runtime-environment
maven-changelog-plugin\:deregister=null>
aspectj\:test-compile=Weave tests with AspectJ>aspectj\:compile
war\:inplace=Deploy a webapp into maven.war.src - in particular setting up WEB-INF/lib and WEB-INF/classes>
torque\:datasql=generates sql from data xml>torque\:init
plugin\:generate-properties=Generate properties.xml for the plugin>
test\:compile=Compile the TestCases and TestSuites>java\:compile,java\:jar-resources,test\:prepare-filesystem,test\:test-resources
turbine\:torque-copy-security-om=null>
maven-simian-plugin\:report=null>
multiproject\:install-snapshot=Run 'artifact'\:install-snapshot for all subprojects>
appserver\:cycle=Forced install and start of a appserver instance>appserver\:init
artifact\:load=null>
clover\:xml-report-internal=null>
turbine\:install-demo=null>
rar\:install=Install the rar in the local repository>rar\:rar
maven-multiproject-plugin\:deregister=null>
torque\:check-om-zip=null>torque\:init
javacc\:javacc-generate=Generate source from javacc grammar>
war\:war-resources=Copy webapp resources to target directory>war\:init
clover\:html-report-internal=null>
eclipse\:add-maven-repo=Ensure that the classpath variable MAVEN_REPO is available>
clover\:on=Activates Clover>clover\:init
multiproject\:install-snapshot-callback=null>
maven-simian-plugin\:deregister=null>
javacc\:jjtree-generate=null>
ejb\:deploy-client=Deploys the ejb client to the remote repository>ejb\:ejb-client
torque\:ojb-repository=Generates the repository for ojb (experimental)>torque\:init
tjdo\:enhance=Provides the enhancement of classes to use TJDO for persistence>tjdo\:init
torque\:insert-sql=inserts the generated sql>torque\:init
appserver\:install=Install a appserver instance>appserver\:init
javacc=null>
antlr\:generate=Generate source from antlr grammars>antlr\:prepare-filesystem
struts=Ensure a war file containing a Struts application is valid>struts\:validate-war
maven-jcoverage-plugin\:register=Register the maven-jcoverage-plugin.>
site\:deploy=deploy the generated site docs>
site\:war=Create a WAR File from the generated site>site\:init,site
pom\:verify-version=null>
site\:generate=null>site
jetty\:prepare-filesystem=null>
maven-pmd-plugin\:deregister=null>
ejb\:install-client=Install the ejb client in the local repository>ejb\:ejb-client
fo\:fo=Generates an fo xml document from the ${maven.pdf.navigationFile} file supplied as part of the documentation.>pdf\:prepare
maven-jellydoc-plugin\:register=null>
turbine\:war=Generate a Turbine based Web application (war)>turbine\:check-runtime-environment,java\:compile,war\:webapp
repository\:copy-artifact=copy an artifact, specified by groupId, artifact and type, to the repository>
test\:eclipse=null>
maven-jxr-plugin\:register=null>
maven-simian-plugin\:register=null>
checkstyle=Perform checkstyle checks>checkstyle\:report
jcoverage=Generate HTML test coverage reports with JCoverage>jcoverage\:html-report
clean\:clean=Remove all project artifacts>
ear\:deploy-snapshot=Deploys the snapshot version of  the ear to remote repository>ear\:ear
checkstyle\:report=Perform checkstyle checks>checkstyle\:init
ejb\:install=Install the ejb in the local repository>ejb\:ejb
repository\:audit-rename-licenses=rename/link all licenses from their original name to ${groupId}.license>
repository\:copy-jar=copy a jar, specified by groupId and artifact, to the repository>
turbine\:setup-torque=null>
xdoc\:jelly-transform=transform xdocs using jelly/jsl rather than dvsl>xdoc\:init,xdoc\:jelly-init,xdoc\:register-reports
torque\:id-table-init-sql=generates initialization sql for ID Broker>torque\:init
scm\:validate=null>scm\:parse-connection
multiproject\:deploy-snapshot-callback=null>
idea\:module=Generate IDEA .iml project files>idea\:init,war\:load
uberjar\:uberjar=Build an uberjar>jar\:jar,uberjar\:init
site\:ftpdeploy=Deploy the generated site docs using ftp>site\:init
uberjar\:deploy=Deploys the uberjar to the remote repository>uberjar\:uberjar
faq\:init=null>
plugin\:repository-deploy=null>plugin\:plugin
java\:jar-resources=Copy any resources that must be present in the deployed JAR file>
multiproject\:artifact-callback=null>
clover\:swing-report=Generate Swing test coverage reports with Clover>clover\:test,clover\:swing-report-internal
plugin\:download-artifact=download a plugin from a remote repo>
release\:deploy-distribution-bin=null>release\:build-distribution-bin
torque\:doc=Generates documentation for your datamodel>torque\:init
rar\:deploy-snapshot=Deploys the snapshot version of  the rar to remote repository>rar\:rar
clean=Remove all project artifacts>clean\:clean
uberjar=Build a uberjar file>uberjar\:uberjar
maven-license-plugin\:register=null>
maven-developer-activity-plugin\:register=null>
fo=This simply pre-requisites the fo\:fo goal. >fo\:fo
jetty\:run-war=Run Jetty on the current war project>war\:war
dashboard\:aggregate=null>
ear\:generate-ear-descriptor=Generates the ear descriptor>
dist\:deploy-bin-snapshot=Deploy a binary distribution>dist\:build-bin
abbot\:check-webstart-env=null>abbot\:check-env
maven-torque-plugin\:register=null>
clover\:test=Compile project code with Clover and executes the unit tests>
announcement=Generate release announcement>announcement\:generate
turbine\:torque-datasql=null>
scm\:bootstrap-project=Bootstrap a project from SCM>scm\:checkout-project
site\:sshdeploy=Deploy the generated site docs using ssh>site\:init
jboss\:package=Creates a specific JBoss server configuration>jboss\:init,jboss\:configure
pmd\:cpd-report=Generate duplicate source code report with CPD>
aspectj\:compile=Weave classes with AspectJ>aspectj\:init
repository\:delete-project=delete a project, specified by groupId, in the repository>
maven-cruisecontrol-plugin\:deregister=null>
eclipse\:external-tools-21=Generate an Eclipse 2.1 external tool for each goal>
maven-linkcheck-plugin\:report=null>
jdiff=Generate an api difference report between versions>xdoc\:init
xdoc\:dump-report-settings=null>
test\:prepare-filesystem=Create the needed directory structure>
ear\:load=null>
maven-junit-report-plugin\:report=null>junit-report\:report
pom\:deploy-snapshot=Deploys the snapshot version of the POM to remote repository>
maven-jdepend-plugin\:deregister=null>
dashboard\:xdoc=null>
turbine\:torque-sql=null>
site\:init=null>xdoc\:init
xdoc\:register-reports=null>
xdoc\:transform=Generate html project documentation xdoc sources>xdoc\:init
appserver\:reinstall=Reinstall a appserver instance>appserver\:init
turbine\:torque-init=null>turbine\:torque-copy-om
castor\:prepare-filesystem=Make any necessary directories for castor processing>
jboss\:deploy-ejb=Deploy ${maven.final.name}.jar>
scm\:perform-release=Perform a release from SCM>scm\:parse-connection
jnlp\:generate-jnlp=Generate the .jnlp file and sign all jars>jar\:jar,jnlp\:init
multiproject\:artifact=\ Builds all artifacts for all subproject>
nsis\:installer=Generate NSIS .exe file>nsis\:generate-project,nsis\:generate-setup
dist\:prepare-src-filesystem=Builds the source distribution file system.>
jdeveloper\:scanSources=Scans the source in order to integrate them into JDeveloper files>
maven-jdiff-plugin\:register=null>
clover\:html-report=Generate HTML test coverage reports with Clover>clover\:test,clover\:html-report-internal
ejb\:deploy=Deploys the ejb to the remote repository>ejb\:ejb
webserver\:start=Start a webserver instance>webserver\:init
license=Generate an XML file from the license file>license\:transfer
multiproject\:goal=Run a given goal on all projects>multiproject\:projects-init
war\:init=null>
tjdo\:init=null>
test\:match=Execute all the tests matching the given 'testmatch' variable>test\:compile
multiproject\:clean=Clean all subprojects>
eclipse\:generate-classpath=Generate Eclipse .classpath file>
jar\:deploy-snapshot=Deploy a snapshot jar to the remote repository>jar\:jar
war=Build a war file>war\:war
plugin\:uninstall=Uninstall all versions of the plugin>
xdoc\:copy-resources=copy static resources for use in xdocs generated html>xdoc\:init
torque=Generates SQL files and Peer-based OM objects>
torque\:sql=generates the SQL for your project>torque\:init,torque\:sql-check
console\:help=Print the help message.>
latka\:test=Run the project's latka tests>
javadoc\:generate=null>maven-javadoc-plugin\:report
xdoc\:copy-user-resources=Copy user provided resources to docs destination>xdoc\:init
dist\:deploy-bin=Deploy a binary distribution>dist\:build-bin
jcoverage\:html-report=Generate HTML test coverage reports with JCoverage>jcoverage\:on,test\:test
maven-jira-plugin\:report=Generate report with all entries defined in Jira>
nsis\:generate-project=Generate NSIS project.nsh file>
aspectj\:init=null>
multiproject\:create-overview-page=null>multiproject\:site-init
jellydoc\:init=null>
ant=Generate an Ant build file>ant\:generate-build
clover\:off=Deactivates Clover>
hibernate\:schema-export=Export Hibernate schema>hibernate\:init
multiproject\:deploy-snapshot=Run 'artifact'\:deploy-snapshot for all subprojects>
latex\:prepare-filesystem=Prepare the filesystem for latex processing>
webserver\:stop=Stop a webserver instance>webserver\:init
torque\:om-check=null>torque\:init
jetty\:config=Generate a Jetty configuration file>jetty\:prepare-filesystem
antlr\:prepare-filesystem=Make any necessary directories for antlr processing>
war\:deploy-snapshot=Deploys the snapshot version of  the war to remote repository>war\:war
rar\:load=no-op goal>
latka\:single=Execute a single test defined using the 'testcase' variable>
pmd\:report=Generate source code report with PMD>
maven-ashkelon-plugin\:register=null>
maven-jdiff-plugin\:deregister=null>
pdf\:prepare=Stages all files needed to generate the PDF>pdf\:init
maven-multiproject-plugin\:report=null>
aspectwerkz\:compile=Compile AspectWerkz java sources>aspectwerkz\:init,java\:compile
uberjar\:classworlds-conf=Generates a classworlds conf>uberjar\:init
scm\:cvs-prepare-release=null>
jar\:install=Install the jar in the local repository>jar\:jar
multiproject\:site-init=null>multiproject\:projects-init
console=Run the Maven console>
dist\:build-bin=Build the binary distribution.>dist\:build-setup,dist\:prepare-bin-filesystem
repository\:create-project=create a project, specified by groupId, in the repository>
maven-jdepend-plugin\:register=null>
plugin\:install=Install the plugin jar, prepare Maven to expand it locally and clear caches>plugin\:plugin
site=Generate the web site>
native\:jniheader=make jniheaders for classes>java\:compile
plugin\:generate-goals=Generate goals.xml for the plugin>
validate-pom-for-release=null>
appserver\:restart=Restart a appserver instance>appserver\:init
javadoc\:jar=null>javadoc
javadoc\:deploy-snapshot=Deploys the snapshot version of jar containing javadoc to remote repository>javadoc\:jar
scm\:parse-connection=null>
appserver\:start=Start a appserver instance>appserver\:init
webserver\:install=Install a webserver instance>webserver\:init
latex\:generate=Generate documentation from latex source>latex\:prepare-filesystem
create-upload-bundle=null>
torque\:om-zip-worker-delete=null>
site\:fsdeploy=Deploy the generated site by copying to the site directory>site\:init
abbot\:editor=Launch Abbot costello editor>abbot\:check-env,abbot\:prepare-filesystem
jboss\:undeploy-ejb=Undeploy ${maven.final.name}.jar>
checkstyle\:run=null>
jboss\:stop=Stops JBoss>jboss\:init
idea\:project=Generate IDEA .ipr project files>idea\:init
jellydoc=Generates the tag documentation>jellydoc\:doclet
xdoc\:performJSL=Allows the LinkCheck plugin to xdoc a single directory>
jalopy=Format all sources with code convention conformance>jalopy\:format
rar\:rar=Build a rar file>rar\:init
nsis\:generate-setup=Generate NSIS .nsi file>
native=Native compiler>native\:compile
test\:test=Test the application>test\:compile
maven-license-plugin\:deregister=null>
maven-changelog-plugin\:report=Generate a changelog report>
maven-developer-activity-plugin\:report=Generate developer and file activity reports>
javadoc\:deploy=Deploys the jar containing javadoc to the remote repository>javadoc\:jar
plugin\:test=null>
maven-checkstyle-plugin\:register=null>
genapp=Generate Application based on a template>
plugin\:uninstall-now=Uninstall all versions of the plugin, including those in the currently running instance of Maven>plugin\:uninstall
jdee\:generate-project=Generate project file in basedir>
maven-jxr-plugin\:report=Generate HTML cross reference sources>
torque\:sql-generate=null>torque\:init
jnlp\:init=Initialize jnlp plugin>
maven-tasklist-plugin\:report=Generate a list of tasks from @todo tags in your code>xdoc\:init
dashboard\:run-goals=null>
struts\:validate-war=Ensure a war file containing a Struts application is valid>
clover\:test-single=Compile code with Clover and execute a single unit test>
multichanges\:report=null>
plugin\:plugin=Build a plugin jar>
turbine\:check-setup-environment=null>turbine\:check-runtime-environment
abbot\:test=Run the abbot tests>abbot\:check-env,abbot\:prepare-filesystem,abbot\:prepare-resources,java\:compile,java\:jar-resources
webserver\:reinstall=Reinstall a webserver instance>webserver\:init
maven-torque-plugin\:report=Generates documentation for your datamodel>torque\:init
jalopy\:format=Format all sources with code convention conformance>jalopy\:taskdef,java\:compile
j2ee=Check that a war file is valid>j2ee\:validate-war
